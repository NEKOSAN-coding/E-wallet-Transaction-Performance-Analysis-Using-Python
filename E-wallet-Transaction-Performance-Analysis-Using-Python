{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"159vY24Sh8Sh_EyCU7C5QuqycESwHvUW8","authorship_tag":"ABX9TyMvT4+rhnDd4zPU56Y3EkNn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"QBh1PZPqKh8k","executionInfo":{"status":"ok","timestamp":1749955934353,"user_tz":-420,"elapsed":10495,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}}},"outputs":[],"source":["import pandas as pd\n","df_payment_report = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Python project 2/payment_report.csv')\n","df_product = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Python project 2/product.csv')\n","df_transactions = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Python project 2/transactions.csv')\n","df_payment_enriched = df_payment_report.merge(df_product, how = 'left', on = 'product_id')"]},{"cell_type":"code","source":["#EDA df_payment_enriched\n","missing_data_df_payment_enriched = df_payment_enriched.isnull().sum()\n","print(missing_data_df_payment_enriched)\n","\n","duplicate_rows_df_payment_enriched = df_payment_enriched.duplicated().sum()\n","print(duplicate_rows_df_payment_enriched)\n","\n","df_payment_enriched.info()\n","\n","df_payment_enriched.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":699},"id":"3Mk37WBPi3HZ","executionInfo":{"status":"ok","timestamp":1749955934785,"user_tz":-420,"elapsed":435,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"b1a91863-8472-43b7-e32f-876667fed1db"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["report_month      0\n","payment_group     0\n","product_id        0\n","source_id         0\n","volume            0\n","category         22\n","team_own         22\n","dtype: int64\n","0\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 919 entries, 0 to 918\n","Data columns (total 7 columns):\n"," #   Column         Non-Null Count  Dtype \n","---  ------         --------------  ----- \n"," 0   report_month   919 non-null    object\n"," 1   payment_group  919 non-null    object\n"," 2   product_id     919 non-null    int64 \n"," 3   source_id      919 non-null    int64 \n"," 4   volume         919 non-null    int64 \n"," 5   category       897 non-null    object\n"," 6   team_own       897 non-null    object\n","dtypes: int64(3), object(4)\n","memory usage: 50.4+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["         product_id   source_id        volume\n","count    919.000000  919.000000  9.190000e+02\n","mean    1192.517954   44.875952  1.978574e+08\n","std     1293.463329    0.910995  8.367595e+08\n","min        3.000000   37.000000  5.500000e+03\n","25%      640.000000   45.000000  1.250000e+06\n","50%     1059.000000   45.000000  7.982015e+06\n","75%     1585.000000   45.000000  5.447599e+07\n","max    15067.000000   45.000000  1.383171e+10"],"text/html":["\n","  <div id=\"df-925295be-5e74-462d-98bb-d25612318826\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_id</th>\n","      <th>source_id</th>\n","      <th>volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>919.000000</td>\n","      <td>919.000000</td>\n","      <td>9.190000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1192.517954</td>\n","      <td>44.875952</td>\n","      <td>1.978574e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1293.463329</td>\n","      <td>0.910995</td>\n","      <td>8.367595e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.000000</td>\n","      <td>37.000000</td>\n","      <td>5.500000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>640.000000</td>\n","      <td>45.000000</td>\n","      <td>1.250000e+06</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1059.000000</td>\n","      <td>45.000000</td>\n","      <td>7.982015e+06</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1585.000000</td>\n","      <td>45.000000</td>\n","      <td>5.447599e+07</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>15067.000000</td>\n","      <td>45.000000</td>\n","      <td>1.383171e+10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-925295be-5e74-462d-98bb-d25612318826')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-925295be-5e74-462d-98bb-d25612318826 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-925295be-5e74-462d-98bb-d25612318826');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9d2ebed4-e513-4bd8-8652-08509d2bbb24\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d2ebed4-e513-4bd8-8652-08509d2bbb24')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9d2ebed4-e513-4bd8-8652-08509d2bbb24 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_payment_enriched\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"product_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5011.641492488273,\n        \"min\": 3.0,\n        \"max\": 15067.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1192.5179542981502,\n          1059.0,\n          919.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 312.0135373763905,\n        \"min\": 0.9109946573273892,\n        \"max\": 919.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          44.8759521218716,\n          45.0,\n          0.9109946573273892\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4843187238.915914,\n        \"min\": 919.0,\n        \"max\": 13831708189.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          197857354.9412405,\n          7982015.0,\n          919.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["#EDA df_transactions\n","missing_data_df_transactions = df_transactions.isnull().sum()\n","print(missing_data_df_transactions)\n","\n","duplicate_rows_df_transactions = df_transactions.duplicated().sum()\n","print(duplicate_rows_df_transactions)\n","\n","df_transactions.info()\n","\n","df_transactions.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":768},"id":"whbEtkPzniWs","executionInfo":{"status":"ok","timestamp":1749955938940,"user_tz":-420,"elapsed":4154,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"7883c656-6188-4604-8dfb-e203e3f73970"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["transaction_id          0\n","merchant_id             0\n","volume                  0\n","transType               0\n","transStatus             0\n","sender_id           49059\n","receiver_id        164795\n","extra_info        1317907\n","timeStamp               0\n","dtype: int64\n","28\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1324002 entries, 0 to 1324001\n","Data columns (total 9 columns):\n"," #   Column          Non-Null Count    Dtype  \n","---  ------          --------------    -----  \n"," 0   transaction_id  1324002 non-null  int64  \n"," 1   merchant_id     1324002 non-null  int64  \n"," 2   volume          1324002 non-null  int64  \n"," 3   transType       1324002 non-null  int64  \n"," 4   transStatus     1324002 non-null  int64  \n"," 5   sender_id       1274943 non-null  float64\n"," 6   receiver_id     1159207 non-null  float64\n"," 7   extra_info      6095 non-null     object \n"," 8   timeStamp       1324002 non-null  int64  \n","dtypes: float64(2), int64(6), object(1)\n","memory usage: 90.9+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["       transaction_id   merchant_id        volume     transType   transStatus  \\\n","count    1.324002e+06  1.324002e+06  1.324002e+06  1.324002e+06  1.324002e+06   \n","mean     3.002233e+09  2.460318e+03  2.388059e+05  6.979222e+00 -1.204625e+01   \n","std      1.042606e+07  3.304277e+03  9.681009e+05  7.459714e+00  5.577823e+01   \n","min      3.000000e+09  5.000000e+00  1.000000e+00  2.000000e+00 -1.333000e+03   \n","25%      3.001121e+09  3.050000e+02  1.000000e+04  2.000000e+00  1.000000e+00   \n","50%      3.002200e+09  2.250000e+03  3.000000e+04  2.000000e+00  1.000000e+00   \n","75%      3.003255e+09  2.270000e+03  1.000000e+05  8.000000e+00  1.000000e+00   \n","max      6.000066e+09  1.625250e+05  7.869148e+07  3.000000e+01  1.000000e+00   \n","\n","          sender_id   receiver_id     timeStamp  \n","count  1.274943e+06  1.159207e+06  1.324002e+06  \n","mean   1.033938e+08  2.084884e+08  1.683130e+12  \n","std    6.234305e+08  9.287794e+08  1.707815e+08  \n","min    1.000001e+07 -6.300000e+01  1.682874e+12  \n","25%    1.005657e+07  1.526700e+05  1.682994e+12  \n","50%    1.094193e+07  7.025130e+06  1.683097e+12  \n","75%    2.101266e+07  3.151238e+07  1.683269e+12  \n","max    6.993439e+09  2.100000e+10  1.683479e+12  "],"text/html":["\n","  <div id=\"df-6415e8c8-5574-4ebf-942d-daeebf13d474\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>transaction_id</th>\n","      <th>merchant_id</th>\n","      <th>volume</th>\n","      <th>transType</th>\n","      <th>transStatus</th>\n","      <th>sender_id</th>\n","      <th>receiver_id</th>\n","      <th>timeStamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.324002e+06</td>\n","      <td>1.324002e+06</td>\n","      <td>1.324002e+06</td>\n","      <td>1.324002e+06</td>\n","      <td>1.324002e+06</td>\n","      <td>1.274943e+06</td>\n","      <td>1.159207e+06</td>\n","      <td>1.324002e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.002233e+09</td>\n","      <td>2.460318e+03</td>\n","      <td>2.388059e+05</td>\n","      <td>6.979222e+00</td>\n","      <td>-1.204625e+01</td>\n","      <td>1.033938e+08</td>\n","      <td>2.084884e+08</td>\n","      <td>1.683130e+12</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.042606e+07</td>\n","      <td>3.304277e+03</td>\n","      <td>9.681009e+05</td>\n","      <td>7.459714e+00</td>\n","      <td>5.577823e+01</td>\n","      <td>6.234305e+08</td>\n","      <td>9.287794e+08</td>\n","      <td>1.707815e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>3.000000e+09</td>\n","      <td>5.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>2.000000e+00</td>\n","      <td>-1.333000e+03</td>\n","      <td>1.000001e+07</td>\n","      <td>-6.300000e+01</td>\n","      <td>1.682874e+12</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.001121e+09</td>\n","      <td>3.050000e+02</td>\n","      <td>1.000000e+04</td>\n","      <td>2.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>1.005657e+07</td>\n","      <td>1.526700e+05</td>\n","      <td>1.682994e+12</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.002200e+09</td>\n","      <td>2.250000e+03</td>\n","      <td>3.000000e+04</td>\n","      <td>2.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>1.094193e+07</td>\n","      <td>7.025130e+06</td>\n","      <td>1.683097e+12</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.003255e+09</td>\n","      <td>2.270000e+03</td>\n","      <td>1.000000e+05</td>\n","      <td>8.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>2.101266e+07</td>\n","      <td>3.151238e+07</td>\n","      <td>1.683269e+12</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>6.000066e+09</td>\n","      <td>1.625250e+05</td>\n","      <td>7.869148e+07</td>\n","      <td>3.000000e+01</td>\n","      <td>1.000000e+00</td>\n","      <td>6.993439e+09</td>\n","      <td>2.100000e+10</td>\n","      <td>1.683479e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6415e8c8-5574-4ebf-942d-daeebf13d474')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6415e8c8-5574-4ebf-942d-daeebf13d474 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6415e8c8-5574-4ebf-942d-daeebf13d474');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-eda9a9a9-f86e-4b97-aa77-105480b174ed\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eda9a9a9-f86e-4b97-aa77-105480b174ed')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-eda9a9a9-f86e-4b97-aa77-105480b174ed button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_transactions\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"transaction_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1920581919.9618683,\n        \"min\": 1324002.0,\n        \"max\": 6000066009.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3002233478.574729,\n          3002200333.5,\n          1324002.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"merchant_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 462794.5112930837,\n        \"min\": 5.0,\n        \"max\": 1324002.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2460.3181641719575,\n          2250.0,\n          1324002.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27691223.554281905,\n        \"min\": 1.0,\n        \"max\": 78691477.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          238805.8801746523,\n          30000.0,\n          1324002.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transType\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 468102.44473070005,\n        \"min\": 2.0,\n        \"max\": 1324002.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1324002.0,\n          6.979222085767242,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transStatus\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 468170.5476820029,\n        \"min\": -1333.0,\n        \"max\": 1324002.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -12.046246153706717,\n          1.0,\n          55.77823455066278\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sender_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2442329041.5999413,\n        \"min\": 1274943.0,\n        \"max\": 6993438823.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          103393777.12722373,\n          10941934.0,\n          1274943.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"receiver_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7372042523.190443,\n        \"min\": -63.0,\n        \"max\": 21000000000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          208488438.59604368,\n          7025130.0,\n          1159207.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"timeStamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 779102824905.7046,\n        \"min\": 1324002.0,\n        \"max\": 1683478799495.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1683130388150.2332,\n          1683096619647.5,\n          1324002.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#Data Wrangling\n","#1.\n","df_payment_enriched['report_month'] = pd.to_datetime(df_payment_enriched['report_month'])\n","df_transactions.drop_duplicates(subset=['transaction_id'], inplace=True)\n","#top3product:\n","top_3_products = df_payment_enriched.groupby('product_id')['volume'].sum().sort_values(ascending = False).head(3)\n","print(top_3_products)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"05NvlrowoH12","executionInfo":{"status":"ok","timestamp":1749955939100,"user_tz":-420,"elapsed":151,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"7d244327-3d30-4720-ebd4-f9afab7eb774"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["product_id\n","1976    61797583647\n","429     14667676567\n","372     13713658515\n","Name: volume, dtype: int64\n"]}]},{"cell_type":"code","source":["#2.\n","product_team_counts = df_payment_enriched.groupby('product_id')['team_own'].nunique()\n","abnormal_products = product_team_counts[product_team_counts > 1]\n","\n","if not abnormal_products.empty:\n","    print(\"Các product_id bất thường (thuộc sở hữu của hơn 1 team):\")\n","    print(abnormal_products)\n","else:\n","    print(\"Không tìm thấy product_id bất thường (mỗi product_id thuộc sở hữu của 1 team).\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OnJk-r50lp_0","executionInfo":{"status":"ok","timestamp":1749955939131,"user_tz":-420,"elapsed":29,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"bd8d6d71-7e9f-4ba0-8fd8-0f3c313c3031"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Không tìm thấy product_id bất thường (mỗi product_id thuộc sở hữu của 1 team).\n"]}]},{"cell_type":"code","source":["#3.\n","lowest_performance_team = df_payment_enriched.groupby('team_own')['volume'].sum().idxmin()\n","print(lowest_performance_team)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xpllX7e3zeJS","executionInfo":{"status":"ok","timestamp":1749955939138,"user_tz":-420,"elapsed":5,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"b2ff0746-a1af-4285-f580-cb2a1a8045e9"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["APS\n"]}]},{"cell_type":"code","source":["#3.\n","q2_2023_start = pd.to_datetime('2023-04-01')\n","q2_2023_end = pd.to_datetime('2023-06-30')\n","df_q2_2023 = df_payment_enriched[(df_payment_enriched['report_month'] >= q2_2023_start) & (df_payment_enriched['report_month'] <= q2_2023_end)] #chỉ lấy dữ liệu\n","\n","team_volumes = df_q2_2023.groupby('team_own')['volume'].sum()\n","lowest_performing_team = team_volumes.idxmin()\n","lowest_team_volume = team_volumes.min()\n","print(f\"Team có hiệu suất thấp nhất kể từ Q2.2023: {lowest_performing_team} với tổng khối lượng {lowest_team_volume:,}.\")\n","\n","if lowest_performing_team and pd.notna(lowest_performing_team):\n","    df_lowest_team = df_q2_2023[df_q2_2023['team_own'] == lowest_performing_team]\n","    category_contributions = df_lowest_team.groupby('category')['volume'].sum()\n","    category_contributions = category_contributions.dropna() # Loại bỏ NaN category\n","\n","    if not category_contributions.empty:\n","        least_contributing_category = category_contributions.idxmin()\n","        least_category_volume = category_contributions.min()\n","        print(f\"Danh mục đóng góp ít nhất cho team {lowest_performing_team}: {least_contributing_category} với khối lượng {least_category_volume:,}.\")\n","    else:\n","        print(f\"Không tìm thấy danh mục nào cho team {lowest_performing_team} trong giai đoạn này.\")\n","else:\n","    print(\"Không thể xác định team có hiệu suất thấp nhất.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-1b_crwaz_3G","executionInfo":{"status":"ok","timestamp":1749956923857,"user_tz":-420,"elapsed":27,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"2c7f04f7-452e-4e7f-9561-9cc827e830c7"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Team có hiệu suất thấp nhất kể từ Q2.2023: APS với tổng khối lượng 51,141,753.\n","Danh mục đóng góp ít nhất cho team APS: PXXXXXE với khối lượng 25,232,438.\n"]}]},{"cell_type":"code","source":["#4. Find the contribution of source_ids of refund transactions (payment_group = ‘refund’), what is the source_id with the highest contribution?\n","refund_transactions = df_payment_enriched[df_payment_enriched['payment_group'] == 'refund']\n","source_id_refund_volume = refund_transactions.groupby('source_id')['volume'].sum()\n","if not source_id_refund_volume.empty:\n","    total_refund_volume = source_id_refund_volume.sum()\n","    source_id_contributions = (source_id_refund_volume / total_refund_volume * 100).sort_values(ascending=False)\n","    print(f\"Source_id có đóng góp cao nhất vào giao dịch hoàn tiền: {highest_contribution_source_id} ({highest_contribution_percentage}%)\")\n","else:\n","    print(\"Không tìm thấy giao dịch hoàn tiền nào.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XNTmhw-jijyD","executionInfo":{"status":"ok","timestamp":1749957782902,"user_tz":-420,"elapsed":17,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"70b07c14-b6e9-44b4-b13b-ca98bd7ec5ed"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Source_id có đóng góp cao nhất vào giao dịch hoàn tiền: 38 (59.10822495528634%)\n"]}]},{"cell_type":"code","source":["#5.\n","def define_transaction_type(row):\n","    if row['transType'] == 2 and row['merchant_id'] == 1205:\n","        return 'Bank Transfer Transaction'\n","    elif row['transType'] == 2 and row['merchant_id'] == 2260:\n","        return 'Withdraw Money Transaction'\n","    elif row['transType'] == 2 and row['merchant_id'] == 2270:\n","        return 'Top Up Money Transaction'\n","    elif row['transType'] == 2: # transType = 2 & others merchant_id\n","        return 'Payment Transaction'\n","    elif row['transType'] == 8 and row['merchant_id'] == 2250:\n","        return 'Transfer Money Transaction'\n","    elif row['transType'] == 8: # transType = 8 & others merchant_id\n","        return 'Split Bill Transaction'\n","    else:\n","        return 'Invalid Transaction'\n","\n","df_transactions['transaction_type'] = df_transactions.apply(define_transaction_type, axis=1)\n"],"metadata":{"id":"x11CZPU2nTNV","executionInfo":{"status":"ok","timestamp":1749958269433,"user_tz":-420,"elapsed":28583,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["#6.\n","df_valid_transactions = df_transactions[df_transactions['transaction_type'] != 'Invalid Transaction']\n","transaction_summary = df_valid_transactions.groupby('transaction_type').agg(\n","    number_of_transactions=('transaction_id', 'count'),\n","    total_volume=('volume', 'sum'),\n","    unique_senders=('sender_id', lambda x: x.dropna().nunique()),\n","    unique_receivers=('receiver_id', lambda x: x.dropna().nunique())\n",")\n","print(transaction_summary)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5kLatiRZpal6","executionInfo":{"status":"ok","timestamp":1749958817024,"user_tz":-420,"elapsed":894,"user":{"displayName":"Khuê Hà Minh","userId":"17228887677971554531"}},"outputId":"24243375-dc1b-4391-86d9-daf6a1d3f2a5"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["                            number_of_transactions  total_volume  \\\n","transaction_type                                                   \n","Bank Transfer Transaction                    37879   50605806190   \n","Payment Transaction                         398665   71850608441   \n","Split Bill Transaction                        1376       4901464   \n","Top Up Money Transaction                    290498  108605618829   \n","Transfer Money Transaction                  341173   37032880492   \n","Withdraw Money Transaction                   33725   23418181420   \n","\n","                            unique_senders  unique_receivers  \n","transaction_type                                              \n","Bank Transfer Transaction            23156              9271  \n","Payment Transaction                 139583            113298  \n","Split Bill Transaction                1323               572  \n","Top Up Money Transaction            110409            110409  \n","Transfer Money Transaction           39021             34585  \n","Withdraw Money Transaction           24814             24814  \n"]}]}]}